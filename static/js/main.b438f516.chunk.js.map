{"version":3,"sources":["reducers/menu.js","reducers/bag.js","reducers/index.js","actions/menuActionTypes.js","app/store.js","components/menuGroup.js","actions/menuActions.js","components/menuItem.js","components/menuModal.js","components/bagModal.js","components/menuBody.js","serviceWorker.js","index.js","App.js"],"names":["defaultMenuState","menuOpen","itemProps","menu_item_id","description","title","price","modifications","defaultBagState","bag","bagOpen","combineReducers","menu","state","action","type","payload","opened","item_props","contents","updated_bag","push","index","current_bag","splice","quantity","createStore","rootReducer","useStyles","makeStyles","theme","root","width","heading","fontSize","typography","pxToRem","fontWeight","fontWeightRegular","MenuGroup","props","classes","useState","expanded","setExpanded","ExpansionPanel","ExpansionPanelSummary","onClick","expandIcon","aria-controls","id","Typography","className","ExpansionPanelDetails","GridList","gridList","cols","cellHeight","cards","toggleMenuModal","toggleBagModal","minWidth","height","MenuItem","dollarPrice","toFixed","Card","variant","CardActionArea","mods","toggleModal","CardContent","Grid","container","spacing","item","xs","component","color","defaultProps","connect","label","modification","outline","backgroundColor","padding","cardheader","itemTitle","fontWeightBold","itemPrice","instructions","paddingTop","textarea","modheader","bagbutton","float","quantityInput","quantityButtons","paper","position","palette","background","boxShadow","shadows","getModalStyle","top","left","transform","ModificationPanel","handleRadioChange","buttons","map","m","i","key","value","FormControlLabel","control","Radio","ModificationButton","length","RadioGroup","onChange","event","target","addToBag","React","modalStyle","setQuantity","requests","setRequests","setMods","style","handleModalClose","direction","alignItems","justify","IconButton","aria-label","MenuModalHeader","updateRequests","TextareaAutosize","rowsMin","placeholder","SpecialInstructionsPanel","quantityState","TextField","e","InputLabelProps","shrink","QuantityControl","inc","Button","item_mods","split","bag_item","parseFloat","startIcon","itemHeading","borderBottom","itemDescription","decreaseButtons","increaseButtons","card","orderItemPaper","textAlign","text","primary","cardPaper","emptyBag","secondary","summaryPaper","modalHeader","summaryHeader","footer","summaryTable","borderCollapse","tableDesc","tableRow","tableElem","emptyBagButton","marginTop","getPrice","undefined","toDollar","x","OrderItem","updateQuantity","removeItem","Paper","elevation","removeFromBag","modprice","getDescription","size","updateBagQuantity","delivery","setDelivery","BagModalHeader","square","row","OrderTypeForm","items","OrderItemList","forEach","tax","total","OrderSummary","enabled","disabled","OrderFooter","flexGrow","menuButton","marginRight","logo","maxWidth","bagColor","getMenuGroups","menu_data","menuGroups","menu_items","menu_group","MODS","GridListTile","Object","keys","opened_bag","opened_menu","groups","AppBar","Toolbar","edge","src","alt","Badge","badgeContent","Container","Modal","aria-labelledby","aria-describedby","open","onClose","handleMenuClose","disableEnforceFocus","Boolean","window","location","hostname","match","ReactDOM","render","store","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.b438f516.chunk.js","sourcesContent":["import { TOGGLE_MENU_MODAL } from \"../actions/menuActionTypes\";\n\nconst defaultMenuState = {\n    menuOpen: false,\n    itemProps: {\n        menu_item_id: 0,\n        description: '',\n        title: '',\n        price: 0.0,\n        modifications: []\n    }\n}\n\nexport default function(state = defaultMenuState, action) {\n  switch (action.type) {\n    case TOGGLE_MENU_MODAL: {\n      const { opened, item_props } = action.payload;\n      return {\n        ...state,\n        menuOpen: opened,\n        itemProps: item_props\n      };\n    }\n    default:\n      return state;\n  }\n}\n","import {\n    ADD_TO_BAG,\n    REMOVE_FROM_BAG,\n    EMPTY_BAG,\n    UPDATE_BAG_QUANTITY,\n    TOGGLE_BAG_MODAL } from \"../actions/menuActionTypes\";\n\nconst defaultBagState = {\n    bag: [],\n    bagOpen: false\n}\n\nexport default function(state = defaultBagState, action) {\n  switch (action.type) {\n    case TOGGLE_BAG_MODAL: {\n        const { opened } = action.payload;\n        return {\n            ...state,\n            bagOpen: opened\n        };\n    }\n    case ADD_TO_BAG: {\n        const { contents } = action.payload;\n        let updated_bag = [...state.bag];\n        updated_bag.push(contents)\n        return {\n            ...state,\n            bag: updated_bag\n        };\n    }\n    case REMOVE_FROM_BAG: {\n        const { index } = action.payload;\n        let current_bag = [...state.bag]\n        current_bag.splice(index, 1)\n\n        return {\n            ...state,\n            bag: current_bag\n        }\n    }\n    case UPDATE_BAG_QUANTITY: {\n        const { index, quantity } = action.payload;\n\n        let current_bag = [...state.bag]\n        current_bag[index].quantity = quantity\n        return {\n            ...state,\n            bag: current_bag\n        }\n    }\n    case EMPTY_BAG: {\n        return {\n            ...state,\n            bag: []\n        }\n    }\n    default:\n      return state;\n  }\n}\n","import { combineReducers } from \"redux\";\nimport menu from \"./menu\";\nimport bag from \"./bag\";\n\nexport default combineReducers({ menu, bag });\n","export const TOGGLE_MENU_MODAL = 'TOGGLE_MENU_MODAL';\nexport const TOGGLE_BAG_MODAL = 'TOGGLE_BAG_MODAL';\nexport const ADD_TO_BAG = 'ADD_TO_BAG';\nexport const UPDATE_BAG_QUANTITY = 'UPDATE_BAG_QUANTITY';\nexport const REMOVE_FROM_BAG = 'REMOVE_FROM_BAG';\nexport const EMPTY_BAG = 'EMPTY_BAG';\n","\r\nimport { createStore } from \"redux\";\r\nimport rootReducer from \"../reducers\";\r\n\r\nexport default createStore(rootReducer);\r\n","\nimport React, { useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\nimport Typography from '@material-ui/core/Typography';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport GridList from '@material-ui/core/GridList';\n\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%',\n  },\n  heading: {\n    fontSize: theme.typography.pxToRem(24),\n    fontWeight: theme.typography.fontWeightRegular,\n  },\n}));\n\nexport default function MenuGroup(props) {\n  const classes = useStyles();\n  const [ expanded, setExpanded ] = useState(true);\n\n  const handleExpansionClick = () => {\n    setExpanded(!expanded);\n  }\n\n  return (\n      <ExpansionPanel expanded={expanded} >\n        <ExpansionPanelSummary onClick={handleExpansionClick}\n          expandIcon={<ExpandMoreIcon />}\n          aria-controls=\"panel1a-content\"\n          id=\"panel1a-header\"\n        >\n          <Typography className={classes.heading}>{props.title}</Typography>\n        </ExpansionPanelSummary>\n        <ExpansionPanelDetails>\n        <GridList className={classes.gridList} cols={2} cellHeight={120}>\n          {props.cards}\n        </GridList>\n        </ExpansionPanelDetails>\n      </ExpansionPanel>\n    );\n}\n","import {\n    TOGGLE_MENU_MODAL,\n    TOGGLE_BAG_MODAL,\n    ADD_TO_BAG,\n    REMOVE_FROM_BAG,\n    UPDATE_BAG_QUANTITY,\n    EMPTY_BAG\n} from './menuActionTypes'\n\nexport const toggleMenuModal = (opened, item_props) => ({\n    type: TOGGLE_MENU_MODAL,\n    payload: { opened, item_props }\n})\n\nexport const toggleBagModal = (opened) => ({\n    type: TOGGLE_BAG_MODAL,\n    payload: { opened }\n})\n\nexport const addToBag = (contents) => ({\n    type: ADD_TO_BAG,\n    payload: { contents }\n})\n\nexport const removeFromBag = (index) => ({\n    type: REMOVE_FROM_BAG,\n    payload: { index }\n})\n\nexport const updateBagQuantity = (index, quantity) => ({\n    type: UPDATE_BAG_QUANTITY,\n    payload: { index, quantity }\n})\n\nexport const emptyBag = () => ({\n    type: EMPTY_BAG\n})\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { connect } from \"react-redux\";\nimport { toggleMenuModal } from '../actions/menuActions';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport Typography from '@material-ui/core/Typography';\nimport Grid from '@material-ui/core/Grid';\n\n\nconst useStyles = makeStyles({\n  root: {\n    minWidth: 275,\n    height: 115\n  }\n});\n\nconst MenuItem = (props) => {\n\n  const toggleModal = (props) => {\n      let item_props = {\n          menu_item_id: props.menu_item_id,\n          description: props.description,\n          title: props.title,\n          price: props.price,\n          modifications: props.mods || []\n      }\n      props.toggleMenuModal(!props.opened, item_props);\n  }\n\n  const classes = useStyles();\n  let dollarPrice = \"$\" + props.price.toFixed(2)\n  return (\n    <Card className={classes.root} variant=\"outlined\">\n      <CardActionArea onClick={() => {toggleModal(props)}}>\n      <CardContent>\n        <Grid container spacing={3}>\n          <Grid item xs={9}>\n            <Typography className=\"menu-item-card-title\" component=\"h6\">\n               {props.title}\n            </Typography>\n            <Typography className=\"menu-item-card-body\" color=\"textSecondary\">\n              {props.description}\n            </Typography>\n          </Grid>\n          <Grid item xs={3}>\n              <span className=\"menu-item-card-price\">{dollarPrice}</span>\n          </Grid>\n        </Grid>\n      </CardContent>\n      </CardActionArea>\n    </Card>\n  );\n}\n\nMenuItem.defaultProps = {\n    opened: false\n}\n\nconst mapStateToProps = state => {\n\n    return {\n        opened: state.menu.menuOpen\n    };\n};\n\nexport default connect(mapStateToProps, { toggleMenuModal })(MenuItem);","import React, { useState } from 'react';\nimport { connect } from \"react-redux\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardHeader from '@material-ui/core/CardContent';\nimport Typography from '@material-ui/core/Typography';\nimport Grid from '@material-ui/core/Grid';\nimport Radio from '@material-ui/core/Radio';\nimport GridList from '@material-ui/core/GridList';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport TextareaAutosize from '@material-ui/core/TextareaAutosize';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport TextField from '@material-ui/core/TextField';\nimport AddIcon from '@material-ui/icons/Add';\nimport RemoveIcon from '@material-ui/icons/Remove';\nimport AddShoppingCartIcon from '@material-ui/icons/AddShoppingCart';\nimport CloseIcon from '@material-ui/icons/Close';\nimport { addToBag, toggleMenuModal } from '../actions/menuActions';\n\n\nconst useStyles = makeStyles(theme => ({\n  label: {\n    fontSize: theme.typography.pxToRem(12),\n  },\n  modification: {\n    width: '100%',\n    outline: 0,\n    backgroundColor: '#e7e7e7',\n    fontSize: '0.6rem',\n    padding: theme.spacing(2, 4, 3),\n  },\n  cardheader: {\n    padding: 0\n  },\n  itemTitle: {\n    padding: 2,\n    fontSize: theme.typography.pxToRem(32),\n    fontWeight: theme.typography.fontWeightBold,\n  },\n  itemPrice: {\n    fontSize: theme.typography.pxToRem(24),\n    fontWeight: theme.typography.fontWeightBold\n  },\n  instructions: {\n    fontSize: theme.typography.pxToRem(14),\n    paddingTop: 16,\n    width: '100%'\n  },\n  textarea: {\n    fontSize: theme.typography.pxToRem(14),\n    paddingTop: 16,\n    width: '100%'\n  },\n  modheader: {\n    fontSize: theme.typography.pxToRem(18),\n    fontWeight: theme.typography.fontWeightBold\n  },\n  bagbutton: {\n    float: 'right'\n  },\n  quantityInput: {\n    width: '100%'\n  },\n  quantityButtons: {\n    padding: 0\n  },\n  paper: {\n    position: 'absolute',\n    width: '60%',\n    outline: 0,\n    backgroundColor: theme.palette.background.paper,\n    boxShadow: theme.shadows[5],\n    padding: theme.spacing(2, 4, 3),\n  },\n}));\n\nconst getModalStyle = () => {\n    return {\n      top: '50%',\n      left: '50%',\n      transform: `translate(-50%, -50%)`,\n    };\n}\n\n\nconst ModificationButton = (props, classes, key) => {\n    const label = props.label + \" + $\" + props.price.toFixed(2)\n    const value = props.label + '|' + props.price\n    return (\n        <FormControlLabel\n            key={key}\n            value={value}\n            control={<Radio color=\"primary\" className=\"mod-radio\" />}\n            label={<Typography className={classes.label}>{label}</Typography>}\n            />\n    )\n}\n\nconst ModificationPanel = (props, classes, handleRadioChange) => {\n    const buttons = props.modifications.map( (m, i) => {\n        return ModificationButton(m, classes, i)\n    })\n\n    if( buttons.length === 0 ) {\n        return (<div></div>)\n    }\n    return (\n        <Card className={classes.modification}>\n            <CardHeader className={classes.cardheader}>\n                <Typography className={classes.modheader}>Modifications</Typography>\n                <Typography className=\"menu-item-card-body\" color=\"textSecondary\">\n                Required - Choose 1.\n                </Typography>\n            </CardHeader>\n            <CardContent >\n\n            <GridList className={classes.gridList} cols={3} >\n\n                <RadioGroup onChange={(event) => handleRadioChange(event.target.value)}>\n                    {buttons}\n                </RadioGroup>\n            </GridList>\n\n            </CardContent>\n        </Card>\n    )\n}\n\nconst SpecialInstructionsPanel = (classes, updateRequests) => {\n    return (\n        <div className={classes.instructions}>\n        <Typography className={classes.modheader}>Special Instructions</Typography>\n        <TextareaAutosize\n            className={classes.textarea}\n            aria-label=\"minimum height\"\n            rowsMin={5}\n            onChange={(event) => updateRequests(event.target.value)}\n            placeholder=\"Any Special Requests?\" />\n        </div>\n    );\n}\n\nconst QuantityControl = (classes, quantity, quantityState) => {\n    return (\n        <Grid container spacing={1}\n            direction=\"row\"\n            alignItems='center' justify=\"flex-start\">\n            <Grid item xs={3}>\n                <Typography className={classes.modheader}>Quantity</Typography>\n            </Grid>\n            <Grid item xs={1}>\n                <IconButton\n                    className={classes.quantityButtons}\n                    onClick={() => quantityState(quantity - 1)}\n                    aria-label=\"remove\" >\n                    <RemoveIcon fontSize=\"small\" />\n                </IconButton>\n            </Grid>\n            <Grid item xs={2}>\n                <TextField\n                    id=\"standard-number\"\n                    type=\"number\"\n                    variant=\"outlined\"\n                    value={quantity}\n                    onChange={(e) => quantityState(e.target.value)}\n                    className={classes.quantityInput}\n                    InputLabelProps={{shrink: true}}/>\n                </Grid>\n            <Grid item xs={1}>\n                <IconButton\n                    onClick={() => quantityState(quantity + 1)}\n                    className={classes.quantityButtons}\n                    aria-label=\"add\" >\n                    <AddIcon fontSize=\"small\" />\n                </IconButton>\n            </Grid>\n        </Grid>\n    );\n}\n\nconst MenuModalHeader = (props, classes, handleModalClose) => {\n    let dollarPrice = \"$\" + props.price.toFixed(2)\n    return (\n        <CardHeader>\n            <Grid container\n                spacing={2}\n                direction=\"row\"\n                alignItems='center' justify=\"space-between\">\n                <Grid item xs={10}>\n                    <Typography className={classes.itemTitle}>\n                        {props.title}\n                    </Typography>\n                </Grid>\n                <Grid item xs={1}>\n                    <IconButton\n                        onClick={() => handleModalClose(props.opened)}\n                        aria-label=\"close\" >\n                        <CloseIcon fontSize=\"large\" />\n                    </IconButton>\n                </Grid>\n            </Grid>\n            <Typography className={classes.itemPrice}>\n                {dollarPrice}\n            </Typography>\n            <Typography className=\"menu-item-card-body\" color=\"textSecondary\">\n                {props.description}\n            </Typography>\n       </CardHeader>\n    )\n}\n\nconst MenuModal = (props) => {\n  const [ modalStyle ] = React.useState(getModalStyle);\n  const [ quantity, setQuantity ] = useState(1);\n  const [ requests, setRequests ] = useState('');\n  const [ mods, setMods] = useState('');\n  const classes = useStyles();\n\n  const handleModalClose = (opened) => { props.toggleMenuModal(!opened, {}) };\n  const handleQuantityChange = (inc) => { setQuantity(inc)};\n  const handleRequestChange = (value) => { setRequests(value) };\n  const handleRadioChange = (value) => { setMods(value) };\n  const handleAddToBagClick = () => {\n      let item_mods = mods.split('|')\n      let bag_item = {\n          title: props.title,\n          price: props.price,\n          menu_item_id: props.menu_item_id,\n          quantity: quantity,\n          requests: requests,\n      }\n      if ( item_mods.length > 1 ) {\n        bag_item = {\n            ...bag_item,\n            modifications: {\n                label: item_mods[0],\n                price: parseFloat(item_mods[1])\n            }\n        }\n      }\n\n      props.addToBag(bag_item)\n      props.toggleMenuModal(false, {})\n  }\n  return (\n\n    <Card style={modalStyle} className={classes.paper} variant=\"outlined\">\n\n      <CardContent>\n        {MenuModalHeader(props, classes, handleModalClose)}\n\n        <Grid container spacing={3}>\n              {ModificationPanel(props, classes, handleRadioChange)}\n        </Grid>\n        <Grid container spacing={3}>\n              {SpecialInstructionsPanel(classes, handleRequestChange)}\n        </Grid>\n        <Grid container spacing={3} direction=\"row\"\n              alignItems='center' justify=\"space-between\">\n            <Grid item xs={8}>\n                {QuantityControl(classes, quantity, handleQuantityChange)}\n            </Grid>\n            <Grid item xs={4}>\n            <Button className={classes.bagbutton}\n                onClick={handleAddToBagClick}\n                startIcon={<AddShoppingCartIcon />}\n                variant=\"contained\" color=\"default\">\n                Add to Bag\n            </Button>\n            </Grid>\n        </Grid>\n      </CardContent>\n\n    </Card>\n\n  );\n}\n\nconst mapStateToProps = state => {\n    return {\n        opened: state.menu.menuOpen,\n    };\n};\n\n\nexport default connect(mapStateToProps, { addToBag, toggleMenuModal })(MenuModal);","import React, { useState } from 'react';\nimport { connect } from \"react-redux\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport Paper from '@material-ui/core/Paper';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardHeader from '@material-ui/core/CardContent';\nimport Typography from '@material-ui/core/Typography';\nimport Grid from '@material-ui/core/Grid';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport TextField from '@material-ui/core/TextField';\nimport AddIcon from '@material-ui/icons/Add';\nimport RemoveIcon from '@material-ui/icons/Remove';\nimport AddShoppingCartIcon from '@material-ui/icons/AddShoppingCart';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport CloseIcon from '@material-ui/icons/Close';\nimport CheckIcon from '@material-ui/icons/Check';\nimport {\n    removeFromBag,\n    emptyBag,\n    updateBagQuantity,\n    toggleBagModal } from '../actions/menuActions';\n\n\nconst useStyles = makeStyles(theme => ({\n  label: {\n    fontSize: theme.typography.pxToRem(12),\n  },\n  modification: {\n    width: '100%',\n    outline: 0,\n    backgroundColor: '#e7e7e7',\n    fontSize: '0.6rem',\n    padding: theme.spacing(2, 4, 3),\n  },\n  cardheader: {\n    padding: 0\n  },\n  itemTitle: {\n    padding: 2,\n    fontSize: theme.typography.pxToRem(16),\n    fontWeight: theme.typography.fontWeightBold\n  },\n  itemHeading: {\n\n    borderBottom: '2px solid black'\n  },\n  itemDescription: {\n    padding: 2,\n    fontSize: theme.typography.pxToRem(12)\n  },\n  itemPrice: {\n    fontSize: theme.typography.pxToRem(16),\n    fontWeight: theme.typography.fontWeightBold,\n    float: 'right'\n  },\n  instructions: {\n    fontSize: theme.typography.pxToRem(14),\n    paddingTop: 16,\n    width: '100%'\n  },\n  textarea: {\n    fontSize: theme.typography.pxToRem(14),\n    paddingTop: 16,\n    width: '100%'\n  },\n  modheader: {\n    fontSize: theme.typography.pxToRem(18),\n    fontWeight: theme.typography.fontWeightBold\n  },\n  bagbutton: {\n    float: 'right'\n  },\n  quantityInput: {\n    width: '100%'\n  },\n  decreaseButtons: {\n    float: 'right'\n  },\n  increaseButtons: {\n    float: 'left'\n  },\n  card: {\n    position: 'absolute',\n    width: '60%',\n    outline: 0,\n    backgroundColor: theme.palette.background.paper,\n    boxShadow: theme.shadows[5],\n    padding: theme.spacing(2, 4, 3),\n  },\n  orderItemPaper: {\n    width: '95%',\n    padding: theme.spacing(2),\n    textAlign: 'left',\n    boxShadow: theme.shadows[1],\n    color: theme.palette.text.primary,\n  },\n  cardPaper: {\n    width: '100%',\n    padding: theme.spacing(2),\n    boxShadow: theme.shadows[1],\n    color: theme.palette.text.primary,\n  },\n  emptyBag: {\n    width: '95%',\n    padding: theme.spacing(2),\n    textAlign: 'center',\n    boxShadow: theme.shadows[0],\n    color: theme.palette.text.secondary,\n    height: '30%'\n  },\n  paper: {\n    padding: theme.spacing(2),\n    textAlign: 'center',\n    color: theme.palette.text.secondary,\n  },\n  summaryPaper: {\n    width: '95%',\n    padding: theme.spacing(2),\n    color: theme.palette.text.primary,\n    boxShadow: theme.shadows[0],\n    backgroundColor: theme.palette.background.paper,\n  },\n  gridList: {\n      width: '95%',\n      padding: theme.spacing(2),\n      color: theme.palette.text.primary,\n      boxShadow: theme.shadows[0],\n      backgroundColor: theme.palette.background.paper,\n  },\n  modalHeader: {\n    padding: 2,\n    fontSize: theme.typography.pxToRem(32),\n    fontWeight: theme.typography.fontWeightBold,\n  },\n  summaryHeader: {\n    padding: theme.spacing(2),\n    fontSize: theme.typography.pxToRem(32),\n    boxShadow: theme.shadows[0],\n    fontWeight: theme.typography.fontWeightBold,\n  },\n  footer: {\n    width: '95%',\n    padding: theme.spacing(2),\n    color: theme.palette.text.primary,\n    boxShadow: theme.shadows[0],\n    backgroundColor: theme.palette.background.paper\n  },\n  summaryTable: {\n    float: 'right',\n    borderCollapse: 'collapse'\n  },\n  tableDesc: {\n    fontSize: theme.typography.pxToRem(24),\n    fontWeight: theme.typography.fontWeightBold,\n    textAlign: 'right',\n  },\n  tableRow: {\n    borderCollapse: 'collapse'\n  },\n  tableElem: {\n    borderBottom: '2px solid black'\n  },\n  emptyBagButton: {\n      float: 'right',\n      marginTop: '8px'\n  }\n}));\n\nconst getModalStyle = () => {\n    return {\n      top: '50%',\n      left: '50%',\n      transform: `translate(-50%, -50%)`,\n    };\n}\n\nconst getPrice = (item) => {\n    let price = item.price\n    if (item.modifications !== undefined) {\n        price += item.modifications.price\n    }\n\n    return (price * item.quantity)\n}\n\nconst toDollar = ( x ) => { return ('$'+ x.toFixed(2)) }\n\n\nconst QuantityControl = (classes, item, quantityState, removeFromBag) => {\n\n    const getDescription = (item) => {\n        let description = '$' + item.price.toFixed(2)\n\n        if (item.modifications !== undefined) {\n            let modprice = '$' +  item.modifications.price.toFixed(2)\n            let modification = `+ (${modprice}) ${item.modifications.label}`\n            description += modification\n        }\n        if (item.requests !== '') {\n            description += ` [${item.requests}]`\n        }\n        return description\n\n    }\n\n    return (\n        <Grid container spacing={1}\n            direction=\"row\"\n            alignItems=\"flex-start\" justify=\"space-between\">\n            <Grid item xs={1}>\n                <IconButton\n                    onClick={() => removeFromBag()}\n                    className={classes.increaseButtons}\n                    aria-label=\"add\" >\n                    <DeleteIcon fontSize=\"small\" />\n                </IconButton>\n            </Grid>\n            <Grid item xs={8}>\n                <Grid container spacing={0} direction=\"row\"\n                    alignItems=\"center\" justify=\"space-between\"\n                    className={classes.itemHeading}\n                    >\n                    <Grid item xs={6}>\n                    <Typography className={classes.itemTitle}>\n                        {item.title}\n                    </Typography>\n                    </Grid>\n                    <Grid item xs={6}>\n                    <Typography className={classes.itemPrice}>\n                        {toDollar(getPrice(item))}\n                    </Typography>\n                    </Grid>\n                </Grid>\n\n                <Typography className={classes.itemDescription} color=\"textSecondary\">\n                    {getDescription(item)}\n                </Typography>\n            </Grid>\n            <Grid item xs={1}>\n                <IconButton\n                    className={classes.decreaseButtons}\n                    onClick={() => quantityState(item.quantity-1)}\n                    aria-label=\"remove\" >\n                    <RemoveIcon fontSize=\"small\" />\n                </IconButton>\n            </Grid>\n            <Grid item xs={1}>\n                <TextField\n                    id=\"standard-number\"\n                    type=\"number\"\n                    variant=\"outlined\"\n                    value={item.quantity}\n                    size=\"small\"\n                    onChange={(e) => quantityState(e.target.value)}\n                    className={classes.quantityInput}\n                    InputLabelProps={{shrink: true}}/>\n                </Grid>\n            <Grid item xs={1}>\n                <IconButton\n                    onClick={() => quantityState(item.quantity + 1)}\n                    className={classes.increaseButtons}\n                    aria-label=\"add\" >\n                    <AddIcon fontSize=\"small\" />\n                </IconButton>\n            </Grid>\n\n        </Grid>\n    );\n}\n\n\nconst OrderItem = (item, index, classes, updateQuantity, removeItem) => {\n\n    const updateQuantityForIndex = (quantity) => { updateQuantity(index, quantity)};\n    const removeFromBag = () => {removeItem(index)};\n    return (\n        <div key={index}>\n        <Grid container\n            spacing={2} direction=\"row\"\n            alignItems=\"center\" justify=\"space-between\">\n            <Paper className={classes.orderItemPaper} elevation={0}>\n            <Grid item xs={12}>\n                {QuantityControl(classes, item, updateQuantityForIndex, removeFromBag)}\n            </Grid>\n            </Paper>\n        </Grid>\n        </div>\n    )\n}\n\nconst OrderItemList = (props, classes) => {\n    const updateQuantity = ( index, quantity ) => { props.updateBagQuantity(index, quantity) };\n    const removeItem = (index) => { props.removeFromBag(index) }\n    const items = props.bag.map( (item, index) => {\n        return OrderItem(item, index, classes, updateQuantity, removeItem)\n    })\n\n    return (\n        <Paper className={classes.gridList} square>\n            {items}\n            <Grid container spacing={2} direction=\"row\"\n                  alignItems=\"center\" justify=\"flex-end\">\n                <Grid item xs={4}>\n                <Button className={classes.emptyBagButton}\n                        onClick={ () => props.emptyBag()}\n                        variant=\"contained\"\n                        color=\"secondary\"\n                        startIcon={<DeleteIcon />}>\n                    Empty Bag\n                </Button>\n                </Grid>\n            </Grid>\n        </Paper>\n    );\n}\n\n\nconst OrderFooter = (props, classes, enabled) => {\n    return (\n        <Paper className={classes.footer}>\n        <Grid container spacing={2} direction=\"row\" alignItems=\"center\"\n              justify=\"flex-end\">\n            <Grid item xs={4}>\n                { enabled === true ?\n                    <Button className={classes.emptyBagButton}\n                        variant=\"contained\"\n                        color=\"primary\"\n                        startIcon={<CheckIcon />}>\n                        Submit Order\n                    </Button>  :\n                    <Button className={classes.emptyBagButton}\n                        variant=\"contained\"\n                        color=\"secondary\"\n                        disabled\n                        startIcon={<CloseIcon />}>\n                        Submit Order\n                    </Button>\n                }\n            </Grid>\n        </Grid>\n        </Paper>\n    );\n}\n\n\nconst OrderTypeForm = (classes, delivery, handleRadioChange) => {\n\n    return (\n        <Grid container\n            spacing={2}\n            direction=\"row\"\n            alignItems='center' justify=\"space-between\">\n            <Grid item xs={12}>\n                <RadioGroup onChange={(event) => handleRadioChange(event.target.value)} row>\n                    <FormControlLabel\n                        value={'Delivery'}\n                        control={<Radio color=\"primary\" className=\"mod-radio\" />}\n                        label={<Typography className={classes.label}>Delivery</Typography>}/>\n                    <FormControlLabel\n                        value={'Pickup'}\n                        control={<Radio color=\"primary\" className=\"mod-radio\" />}\n                        label={<Typography className={classes.label}>Pickup</Typography>}/>\n                </RadioGroup>\n            </Grid>\n            {\n                delivery === true ?\n                (<Grid item xs={12}>\n                    <Paper className={classes.paper}></Paper>\n                </Grid>) : null\n\n            }\n\n        </Grid>\n\n    )\n}\n\nconst OrderSummary = (props, classes) => {\n    let price = 0.0;\n    if ( props.bag !== undefined ) {\n        props.bag.forEach( (item ) => {\n            price += getPrice(item)\n        })\n    }\n\n    let tax = price * 0.05;\n    let total = price + tax;\n\n    return (\n        <Paper square className={classes.summaryPaper}>\n        <Typography className={classes.summaryHeader}>\n            Order Summary\n        </Typography>\n\n        <Grid container\n            spacing={2}\n            direction=\"row\"\n            alignItems='center' justify=\"flex-end\">\n            <Grid item xs={6}>\n            <Paper>\n                <table className={classes.summaryTable}>\n                    <tbody>\n                    <tr className={classes.tableRow}>\n                        <td className={classes.tableElem}>\n                            <Typography className={classes.tableDesc}>\n                                Price:\n                            </Typography>\n\n                        </td>\n                        <td className={classes.tableElem}>\n                            <Typography className={classes.tableDesc}>\n                                {toDollar(price)}\n                            </Typography>\n                        </td>\n                    </tr>\n                    <tr className={classes.tableRow}>\n                        <td className={classes.tableElem}>\n                            <Typography className={classes.tableDesc}>\n                                Tax:\n                            </Typography>\n\n                        </td>\n                        <td className={classes.tableElem}>\n                            <Typography className={classes.tableDesc}>\n                                {toDollar(tax)}\n                            </Typography>\n                        </td>\n                    </tr>\n                    <tr className={classes.tableRow}>\n                        <td className={classes.tableElem}>\n                            <Typography className={classes.tableDesc}>\n                                Total:\n                            </Typography>\n\n                        </td>\n                        <td className={classes.tableElem}>\n                            <Typography className={classes.tableDesc}>\n                                {toDollar(total)}\n                            </Typography>\n                        </td>\n                    </tr>\n                    </tbody>\n                </table>\n            </Paper>\n            </Grid>\n        </Grid>\n        </Paper>\n\n    )\n}\n\n\nconst BagModalHeader = (classes, handleModalClose) => {\n\n    return (\n        <CardHeader>\n            <Grid container\n                spacing={2}\n                direction=\"row\"\n                alignItems='center' justify=\"space-between\">\n                <Grid item xs={10}>\n                    <Typography className={classes.modalHeader}>\n                       Order Details\n                    </Typography>\n                </Grid>\n                <Grid item xs={1}>\n                    <IconButton\n                        onClick={handleModalClose}\n                        aria-label=\"close\" >\n                        <CloseIcon fontSize=\"large\" />\n                    </IconButton>\n                </Grid>\n            </Grid>\n       </CardHeader>\n    )\n}\n\nconst BagModal = (props) => {\n    const [ modalStyle ] = React.useState(getModalStyle);\n    const classes = useStyles();\n\n    const [ delivery, setDelivery ] = useState(false);\n    const handleModalClose = () => { props.toggleBagModal(false) }\n    const handleRadioChange = ( value ) => { setDelivery(value === 'Delivery') };\n    const updateQuantity = ( index, quantity ) => {\n        props.updateBagQuantity(index, quantity)\n    }\n\n    return (\n        <Card style={modalStyle} className={classes.card} variant=\"outlined\">\n            { BagModalHeader(classes, handleModalClose)}\n            <CardContent>\n                <Paper square className={classes.cardPaper}>\n                {OrderTypeForm(classes, delivery, handleRadioChange)}\n                {\n                    props.bag.length > 0 ?\n                        OrderItemList(props, classes, updateQuantity) :\n                        <Paper square className={classes.emptyBag}>\n                            <AddShoppingCartIcon variant=\"outlined\" fontSize=\"large\"/>\n                        </Paper>\n                }\n                {OrderSummary(props, classes)}\n                {OrderFooter(props, classes, false)}\n                </Paper>\n            </CardContent>\n        </Card>\n    );\n}\n\nconst mapStateToProps = state => {\n    return {\n        opened: state.bag.bagOpen,\n        bag: state.bag.bag\n    };\n}\n\n\n\nexport default connect(mapStateToProps, {\n    removeFromBag, emptyBag, toggleBagModal, updateBagQuantity })(BagModal);","import React from 'react';\nimport { connect } from \"react-redux\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Container from '@material-ui/core/Container';\nimport IconButton from '@material-ui/core/IconButton';\nimport Modal from '@material-ui/core/Modal';\nimport Badge from '@material-ui/core/Badge';\nimport GridListTile from '@material-ui/core/GridListTile';\nimport LocalMallOutlinedIcon from '@material-ui/icons/LocalMallOutlined';\n\nimport MenuGroup from './menuGroup';\nimport MenuItem from './menuItem';\nimport MenuModal from './menuModal';\nimport BagModal from './bagModal';\nimport { toggleMenuModal, toggleBagModal } from '../actions/menuActions';\n\nimport menu_data from '../kenaki_menu.json';\nimport MODS from '../modifications.json';\n\n\nconst kenaki_logo = \"https://kenakisushi.com/wp-content/uploads/2018/10/kenaki-emblem.png\";\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  title: {\n    flexGrow: 1,\n  },\n  logo: {\n    maxWidth: 56\n  },\n  bagColor: {\n    color: '#ffffff'\n  }\n}));\n\n\nconst getMenuCard = (menu_items, key) => {\n  if(menu_items['modifications'] !== undefined) {\n    menu_items['mods'] = MODS[menu_items['modifications']] || [];\n  }\n  return (\n    <GridListTile key={key}>\n      <MenuItem key={key} opened={false} {...menu_items} />\n    </GridListTile>\n  )\n}\n\nconst getMenuGroups = (menu_data) => {\n  let menuGroups = {};\n  menu_data.forEach( (x, i) => {\n    if(!menuGroups[x.menu_group]) {\n      menuGroups[x.menu_group] = [];\n    }\n    menuGroups[x.menu_group].push(getMenuCard(x, i));\n  })\n\n  let menuGroupCards = Object.keys(menuGroups).map( (m, i) => {\n    return (\n      <MenuGroup title={m} cards={menuGroups[m]} key={i} />\n    );\n  })\n  return menuGroupCards;\n}\n\nconst MenuBody = (props) => {\n\n  const classes = useStyles();\n  const groups = getMenuGroups(menu_data);\n\n  const handleMenuClose = (props) => {\n    props.toggleMenuModal(!props.opened_menu, {});\n  }\n\n  return (\n    <div className={classes.root}>\n      <AppBar position=\"static\">\n        <Toolbar>\n\n          <IconButton edge=\"start\" className={classes.menuButton} color=\"inherit\" aria-label=\"menu\">\n            <img src={kenaki_logo} alt=\"logo\" className={classes.logo} />\n          </IconButton>\n          <Typography variant=\"h6\" className={classes.title}>\n            KENAKI Sushi Counter\n          </Typography>\n          <IconButton\n            onClick={() => props.toggleBagModal(true)}\n            aria-label=\"add\" >\n            <Badge badgeContent={props.quantity} color=\"secondary\">\n              <LocalMallOutlinedIcon\n                  className={classes.bagColor}\n                  fontSize=\"large\" color=\"inherit\" variant=\"outlined\" />\n            </Badge>\n          </IconButton>\n        </Toolbar>\n      </AppBar>\n\n      <Container maxWidth=\"md\">\n        <Modal\n          aria-labelledby=\"simple-modal-title\"\n          aria-describedby=\"simple-modal-description\"\n          open={props.opened_menu}\n          onClose={() => handleMenuClose(props)}\n          disableEnforceFocus>\n            <div>\n              <MenuModal {...props.itemProps} />\n            </div>\n\n        </Modal>\n        <Modal\n          aria-labelledby=\"simple-modal-title\"\n          aria-describedby=\"simple-modal-description\"\n          open={props.opened_bag}\n          onClose={() => props.toggleBagModal(false)}\n          disableEnforceFocus>\n            <div>\n              <BagModal />\n            </div>\n\n        </Modal>\n        {groups}\n      </Container>\n\n    </div>\n  );\n}\n\nconst mapStateToProps = state => {\n    let quantity = 0;\n\n    state.bag.bag.forEach( (x) => {\n      quantity += x.quantity\n    })\n    return {\n        opened_bag: state.bag.bagOpen,\n        opened_menu: state.menu.menuOpen,\n        itemProps: state.menu.itemProps,\n        quantity: quantity\n    };\n};\n\nexport default connect(mapStateToProps, { toggleMenuModal, toggleBagModal })(MenuBody);","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport store from './app/store';\r\nimport { Provider } from 'react-redux';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","import React from 'react';\r\nimport store from './app/store';\r\nimport { Provider } from \"react-redux\";\r\nimport MenuBody from './components/menuBody.js';\r\n\r\nimport './App.css';\r\n\r\nexport default function App() {\r\n  \r\n  return (\r\n    <Provider store={store}>\r\n      <MenuBody />\r\n    </Provider>\r\n  );\r\n}\r\n"],"sourceRoot":""}