{"version":3,"sources":["reducers/menu.js","reducers/index.js","actions/menuActionTypes.js","app/store.js","components/menuGroup.js","actions/menuActions.js","components/menuItem.js","components/menuModal.js","components/menuBody.js","serviceWorker.js","index.js","App.js"],"names":["defaultMenuState","menuOpen","itemProps","description","title","price","combineReducers","menu","state","action","type","payload","opened","item_props","createStore","rootReducer","useStyles","makeStyles","theme","root","width","heading","fontSize","typography","pxToRem","fontWeight","fontWeightRegular","MenuGroup","props","classes","ExpansionPanel","ExpansionPanelSummary","expandIcon","aria-controls","id","Typography","className","ExpansionPanelDetails","GridList","gridList","cols","cellHeight","cards","toggleMenuModal","minWidth","height","MenuItem","dollarPrice","toFixed","Card","variant","CardActionArea","onClick","toggleModal","CardContent","Grid","container","spacing","item","xs","component","color","defaultProps","connect","paper","position","outline","backgroundColor","palette","background","boxShadow","shadows","padding","getModalStyle","top","left","transform","MenuModal","React","useState","modalStyle","style","flexGrow","menuButton","marginRight","logo","maxWidth","getMenuGroups","menu_data","menuGroups","forEach","x","i","menu_item_data","key","menu_group","push","GridListTile","Object","keys","map","m","groups","AppBar","Toolbar","IconButton","edge","aria-label","src","alt","Modal","aria-labelledby","aria-describedby","open","onClose","handleClose","Container","Boolean","window","location","hostname","match","ReactDOM","render","store","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.1f65e0ae.chunk.js","sourcesContent":["import { TOGGLE_MENU_MODAL } from \"../actions/menuActionTypes\";\n\nconst defaultMenuState = {\n    menuOpen: false,\n    itemProps: {\n        description: '',\n        title: '',\n        price: 0.0\n    }\n}\n\nexport default function(state = defaultMenuState, action) {\n  switch (action.type) {\n    case TOGGLE_MENU_MODAL: {\n      const { opened, item_props } = action.payload;\n      return {\n        ...state,\n        menuOpen: opened,\n        itemProps: item_props\n      };\n    }\n    default:\n      return state;\n  }\n}\n","import { combineReducers } from \"redux\";\nimport menu from \"./menu\";\n\n\nexport default combineReducers({ menu });\n","export const TOGGLE_MENU_MODAL = 'TOGGLE_MENU_MODAL';","\r\nimport { createStore } from \"redux\";\r\nimport rootReducer from \"../reducers\";\r\n\r\nexport default createStore(rootReducer);\r\n","\nimport React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\nimport Typography from '@material-ui/core/Typography';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport GridList from '@material-ui/core/GridList';\n\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%',\n  },\n  heading: {\n    fontSize: theme.typography.pxToRem(24),\n    fontWeight: theme.typography.fontWeightRegular,\n  },\n}));\n\nexport default function MenuGroup(props) {\n  const classes = useStyles();\n\n  return (\n      <ExpansionPanel>\n        <ExpansionPanelSummary\n          expandIcon={<ExpandMoreIcon />}\n          aria-controls=\"panel1a-content\"\n          id=\"panel1a-header\"\n        >\n          <Typography className={classes.heading}>{props.title}</Typography>\n        </ExpansionPanelSummary>\n        <ExpansionPanelDetails>\n        <GridList className={classes.gridList} cols={2} cellHeight={120}>\n          {props.cards}\n        </GridList>\n        </ExpansionPanelDetails>\n      </ExpansionPanel>\n    );\n}\n","import { TOGGLE_MENU_MODAL} from './menuActionTypes'\n\nexport const toggleMenuModal = (opened, item_props) => ({\n    type: TOGGLE_MENU_MODAL,\n    payload: { opened, item_props }\n})\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { connect } from \"react-redux\";\nimport { toggleMenuModal } from '../actions/menuActions';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport Typography from '@material-ui/core/Typography';\nimport Grid from '@material-ui/core/Grid';\n\n\nconst useStyles = makeStyles({\n  root: {\n    minWidth: 275,\n    height: 115\n  }\n});\n\nconst MenuItem = (props) => {\n  \n  const toggleModal = (props) => {\n      let item_props = {\n          description: props.description,\n          title: props.title,\n          price: props.price\n      }\n      props.toggleMenuModal(!props.opened, item_props);\n  }\n\n  const classes = useStyles();\n  let dollarPrice = \"$\" + props.price.toFixed(2)\n  return (\n    <Card className={classes.root} variant=\"outlined\">\n      <CardActionArea onClick={() => {toggleModal(props)}}>\n      <CardContent>\n        <Grid container spacing={3}>\n          <Grid item xs={9}>\n            <Typography className=\"menu-item-card-title\" component=\"h6\">\n               {props.title}\n            </Typography>\n            <Typography className=\"menu-item-card-body\" color=\"textSecondary\">\n              {props.description}\n            </Typography>                \n          </Grid>\n          <Grid item xs={3}>\n              <span className=\"menu-item-card-price\">{dollarPrice}</span>\n          </Grid>  \n        </Grid>\n      </CardContent>\n      </CardActionArea>\n    </Card>\n  );\n}\n\nMenuItem.defaultProps = {\n    opened: false\n}\n\nconst mapStateToProps = state => {\n\n    return { \n        opened: state.menu.menuOpen \n    };\n};\n\nexport default connect(mapStateToProps, { toggleMenuModal })(MenuItem);","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport Typography from '@material-ui/core/Typography';\nimport Grid from '@material-ui/core/Grid';\n\n\nconst useStyles = makeStyles(theme => ({\n  \n  paper: {\n    position: 'absolute',\n    width: '60%',\n    outline: 0,\n    backgroundColor: theme.palette.background.paper,\n    boxShadow: theme.shadows[5],\n    padding: theme.spacing(2, 4, 3),\n  },  \n}));\n\nfunction getModalStyle() {\n    const top = 50 ;\n    const left = 50;\n  \n    return {\n      top: `${top}%`,\n      left: `${left}%`,\n      transform: `translate(-${top}%, -${left}%)`,\n    };\n  }\n\nexport default function MenuModal(props) {\n  const [modalStyle] = React.useState(getModalStyle);\n  const classes = useStyles();\n  let dollarPrice = \"$\" + props.price.toFixed(2)\n  \n  return (\n\n    <Card style={modalStyle} className={classes.paper} variant=\"outlined\">\n      \n      <CardContent>\n        <Grid container spacing={3}>\n          <Grid item xs={9}>\n            <Typography className=\"menu-item-card-title\" component=\"h6\">\n               {props.title}\n            </Typography>\n            <Typography className=\"menu-item-card-body\" color=\"textSecondary\">\n              {props.description}\n            </Typography>                \n          </Grid>\n          <Grid item xs={3}>\n              <span>{dollarPrice}</span>\n          </Grid>  \n        </Grid>\n      </CardContent>\n      \n    </Card>\n    \n  );\n}\n","import React from 'react';\nimport { connect } from \"react-redux\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Container from '@material-ui/core/Container';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuGroup from './menuGroup.js';\nimport MenuItem from './menuItem.js';\nimport MenuModal from './menuModal.js';\nimport GridListTile from '@material-ui/core/GridListTile';\nimport Modal from '@material-ui/core/Modal';\nimport menu_data from '../kenaki_menu.json';\nimport { toggleMenuModal } from '../actions/menuActions';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  title: {\n    flexGrow: 1,\n  },\n  logo: {\n    maxWidth: 56\n  }\n}));\n\n\nconst getMenuCard = (menu_item_data, key) => {\n  return (\n    <GridListTile key={key}>\n      <MenuItem key={key} opened={false} {...menu_item_data} />\n    </GridListTile>  \n  )\n}\n\nconst getMenuGroups = (menu_data) => {\n  let menuGroups = {};\n  menu_data.forEach( (x, i) => {\n    if(!menuGroups[x.menu_group]) {\n      menuGroups[x.menu_group] = [];\n    }\n    menuGroups[x.menu_group].push(getMenuCard(x, i));\n  })\n  \n  let menuGroupCards = Object.keys(menuGroups).map( (m, i) => {\n    return (\n      <MenuGroup title={m} cards={menuGroups[m]} key={i} />\n    );\n  })\n  return menuGroupCards;\n}\n\nconst MenuBody = (props) => {\n  const classes = useStyles();\n  const groups = getMenuGroups(menu_data);\n\n  const handleClose = (props) => {\n    props.toggleMenuModal(!props.opened, {});\n  }\n\n  return (\n    <div className={classes.root}>\n      <AppBar position=\"static\">\n        <Toolbar>\n          \n          <IconButton edge=\"start\" className={classes.menuButton} color=\"inherit\" aria-label=\"menu\">\n            <img src=\"kenaki-emblem.png\" alt=\"logo\" className={classes.logo} />  \n          </IconButton>\n          <Typography variant=\"h6\" className={classes.title}>\n            KENAKI Sushi Counter\n          </Typography>\n        </Toolbar>\n      </AppBar>\n      <Modal\n        aria-labelledby=\"simple-modal-title\"\n        aria-describedby=\"simple-modal-description\"\n        open={props.opened}\n        onClose={() => handleClose(props)}>\n        <MenuModal {...props.itemProps} />  \n      </Modal>      \n      <Container maxWidth=\"md\">\n        {groups}\n      </Container>\n\n    </div>\n  );\n}\n\nconst mapStateToProps = state => {\n\n    return { \n        opened: state.menu.menuOpen,\n        itemProps: state.menu.itemProps\n    };\n};\n\nexport default connect(mapStateToProps, { toggleMenuModal })(MenuBody);","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport store from './app/store';\r\nimport { Provider } from 'react-redux';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","import React from 'react';\r\nimport store from './app/store';\r\nimport { Provider } from \"react-redux\";\r\nimport MenuBody from './components/menuBody.js';\r\n\r\nimport './App.css';\r\n\r\nexport default function App() {\r\n  \r\n  return (\r\n    <Provider store={store}>\r\n      <MenuBody />\r\n    </Provider>\r\n  );\r\n}\r\n"],"sourceRoot":""}